----------------------- INCREMENTAL SEIVE --------------------------

import java.util.ArrayList;
import java.util.Scanner;

public class incrementalSeive {
    public static void main(String [] args){
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        ArrayList<Integer> arr = new ArrayList<Integer>();

        for(int i=2;i<=n;i++){
            Boolean isPrime = true;
            for(int j=0;j<arr.size();j++){
                if(i%arr.get(j) == 0) isPrime = false;
            }

            if(isPrime) arr.add(i);
        }

        for(int i=0;i<arr.size();i++){
            System.out.println(arr.get(i));
        }

        sc.close();
    }
}

----------------------- SEGMENTED SEIVE --------------------------

import java.util.ArrayList;
import java.util.Scanner;

public class segmentedSeive {
    public static void main(String [] args){
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        ArrayList<Boolean> arr = new ArrayList<Boolean>();
        for(int i=0;i<=n;i++){
            arr.add(true);
        }

        for(int i=2;i<=n;i++){
            if(arr.get(i) == true){
                for(int j=i;j<=n;j+=i){
                    if(i != j) arr.set(j,false);
                }
            }
        }

        for(int i=0;i<=n;i++){
            if(arr.get(i) == true) System.out.println(i);
        }

        sc.close();
    }
}


----------------------- LEADERS OF ARRAY --------------------------

import java.util.ArrayList;
import java.util.Scanner;

public class leadersOfArray {
    public static void main(String [] args){
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        ArrayList<Integer> arr = new ArrayList<>();

        for(int i=0;i<n;i++) arr.add(sc.nextInt());

        for(int i=0;i<n;i++){
            int count = 0;
            for(int j=i;j<n;j++){
                if(arr.get(j) > arr.get(i)) count++;
            }
            if(count == 0){
                System.out.println(arr.get(i));
            }
        }

        sc.close();
    }
}

----------------------- LONGEST COMMON SUBSEQUENCE --------------------------

import java.util.Scanner;

public class longestSubSequence {

    public static int getAnswer(String input, int k,int index){
        if(index >= input.length()) return 0;

        if(input.charAt(index) == '1'){
            return getAnswer(input, k, index+1)+1;
        }
        else{
            if(k > 0){
                return getAnswer(input, k-1, index+1)+1;
            }
            else{
                return 0;
            }
        }
    }

    public static void main(String [] args){
        Scanner sc = new Scanner(System.in);

        String input = sc.nextLine();
        int k = sc.nextInt();

        int max = 0;
        for(int i=0;i<input.length();i++){
            int answer = getAnswer(input,k,i);
            if(answer > max) max = answer;
        }

        System.out.format("Answer is %d\n",max);

        sc.close();
    }
}